/*
	# SCREEN-DEMO.CSS
	You should start at the `screen-core.css` file.

	This file is purely to make the bare-bones example markup look vaguely acceptable.
	It is intended to be tossed out, and for you to write your own design styles - partly in `screen-core.css` and partly wherever else makes sense for you.

	Read more about the ideas for CSS organisation here:
	URL HERE
*/

@layer defaults {
	/* # Font Imports */
	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Regular.woff2') format('woff2');
		font-weight: normal; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Bold.woff2') format('woff2');
		font-weight: bold; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Italic.woff2') format('woff2');
		font-weight: normal; font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Light.woff2') format('woff2');
		font-weight: 300; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-LightItalic.woff2') format('woff2');
		font-weight: 300; font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: 'Libre Baskerville';
		src: url('/design-assets/fonts/subset-LibreBaskerville-Regular.woff2') format('woff2');
		font-weight: normal; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Libre Baskerville';
		src: url('/design-assets/fonts/subset-LibreBaskerville-Italic.woff2') format('woff2');
		font-weight: normal; font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: 'Libre Baskerville';
		src: url('/design-assets/fonts/subset-LibreBaskerville-Bold.woff2') format('woff2');
		font-weight: bold; font-style: normal;
		font-display: swap;
	}

	/* Colours */
	:root {
		--colour-callout: 133 33% 66%;
		--colour-callout-contrast: 133 33% 100%;
	}
}

@layer design {
	.skiplink {
		position: absolute; inset: 0 0 auto 0;
		padding-block: 0.5em;
		background-color: hsl( var(--black) ); color: hsl( var(--white) );
		text-decoration: underline;
		clip-path: polygon(0 0, 100% 0, 100% 0%, 0 0%);
		transition: clip-path, var(--very-fast);
	}
	.skiplink:focus {
		clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
	}

	body > * {
		padding-inline: var(--gap);
	}
	main > * + * {
		/* This method of getting vertical spacing may end up redundant if margin-trim lands: https://developer.mozilla.org/en-US/docs/Web/CSS/margin-trim */
		margin-block-start: var(--gap);
	}

	header {
		container: header / inline-size; /* The container is named "header" */
		padding-block: var(--gap); margin-block-end: var(--gap);
		border-block-end: 1px solid currentColor;

		.uc_h1 {
			text-align: center;
			margin-block-end: var(--gap);
		}
	}

	.navSite {
		& form {
			display: flex;
			align-items: flex-end;
			gap: calc( var(--gap) * 0.5 );

			& > * + * {
				margin-block-start: 0;
			}
		}

		& label:after { /* We don't care about the "required" enhancement here */
			display: none;
		}

		.fieldWrapper {
			margin-block-start: 0;
		}

		& ul {
			display: flex; flex-wrap: wrap; gap: var(--gap);
			align-items: center;
		}

		@container header (max-width: 639px) {
			& search {
				display: block;
				margin-block-start: var(--gap);
			}
			.formField {
				flex-grow: 1;
			}
		}

		@container header (min-width: 640px) {
			& {
				display: flex; justify-content: space-between;
			}

			& #searchTerm {
				width: 200px;
			}
		}
	}

	footer {
		padding-block: var(--gap); margin-block-start: var(--gap);
		border-block-start: 1px solid currentColor;
	}

	a[aria-current="page"] {
		pointer-events: none;
		text-decoration: underline;
	}

	aside {
		border-radius: 0.5rem; padding: var(--gap); border: 1px dashed currentColor;
	}

	article:has( > section + aside ) { /* Firefox doesn't have native support yet... */
		display: grid; grid-template-columns: 3fr 1fr; gap: calc(2 * var(--gap));
	}

	figure {
		& figcaption {
			padding: 0.5em 1em; border-bottom: 1px solid currentColor;
		}
		&.example {
			border: 1px solid currentColor;
		}
		& .theContent {
			padding: var(--gap);
			& > * + * {
				margin-block-start: var(--gap);
			}
		}
	}

	/* Adjust the font weight when we hit the full "20px" base size */
	@media screen and (min-width: 1280px) {
		html {
			font-weight: 300;
		}
		:where(h1,h2,h3,h4,h5,h6) {
			font-weight: bold;
		}
	}
}

@layer utilities {
	:where(.uc_callout) {
		padding: 0.25em .5em;
		background-color: hsl( var(--colour-callout) );
		color: hsl( var(--colour-callout-contrast) );
	}

	:where(.uc_uppercase) {
		text-transform: uppercase;
		letter-spacing: calc( (var(--ps-letter-spacing, 40) / 1000) * 1em );
	}
	:where(.uc_uppercase-adjusted) { /* Upper case characters sized down to look visually the same height as lower */
		text-transform: uppercase;
		letter-spacing: calc( (var(--ps-letter-spacing, 40) / 1000) * 1em );
		font-size: 0.875em;
	}
}
