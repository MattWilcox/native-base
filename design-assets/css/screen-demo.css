/*
	# SCREEN-DEMO.CSS
	You should start at the `screen-core.css` file.

	This file contains styling purely to make the example markup and content look "visually nice", and is deliberately in its own file so that it can be completely tossed away, leaving you with the _actual_ core styles I work with before implementing a design.

	It is its own island of stuff that can and should be ignored.
*/
	@layer defaults {
	/* # Font Imports */
	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Regular.woff2') format('woff2');
		font-weight: normal; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Bold.woff2') format('woff2');
		font-weight: bold; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Italic.woff2') format('woff2');
		font-weight: normal; font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-Light.woff2') format('woff2');
		font-weight: 300; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Poppins';
		src: url('/design-assets/fonts/subset-Poppins-LightItalic.woff2') format('woff2');
		font-weight: 300; font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: 'Libre Baskerville';
		src: url('/design-assets/fonts/subset-LibreBaskerville-Regular.woff2') format('woff2');
		font-weight: normal; font-style: normal;
		font-display: swap;
	}

	@font-face {
		font-family: 'Libre Baskerville';
		src: url('/design-assets/fonts/subset-LibreBaskerville-Italic.woff2') format('woff2');
		font-weight: normal; font-style: italic;
		font-display: swap;
	}

	@font-face {
		font-family: 'Libre Baskerville';
		src: url('/design-assets/fonts/subset-LibreBaskerville-Bold.woff2') format('woff2');
		font-weight: bold; font-style: normal;
		font-display: swap;
	}

	/* Colours */
	:root {
		--colour-callout: 133 33% 66%;
		--colour-callout-contrast: 133 33% 100%;
	}
}

@layer design {
	/*
		This file is purely to make the bare-bones example markup look vaguely acceptable.
		It is intended to be tossed out, and for you to write your own design styles - partly in `screen-core.css` and partly wherever else makes sense for you.

		Read more about the ideas for CSS organisation here:
		URL HERE
	*/

	.skiplink {
		position: absolute; inset: 0 0 auto 0;
		padding-block: 0.5em;
		background-color: hsl( var(--black) ); color: hsl( var(--white) );
		text-decoration: underline;
		clip-path: polygon(0 0, 100% 0, 100% 0%, 0 0%);
		transition: clip-path, var(--very-fast);
	}
	.skiplink:focus {
		clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
	}

	body > * {
		padding-inline: var(--gap);
	}
	main > * + * {
		margin-block-start: var(--gap);
	}

	header {
		padding-block: var(--gap); margin-block-end: var(--gap);
		border-block-end: 1px solid currentColor;
	}

	footer {
		padding-block: var(--gap); margin-block-start: var(--gap);
		border-block-start: 1px solid currentColor;
	}

	:where(.uc_rich-text) {
		&:not([data-allow-long-lines]) > * {
			max-inline-size: 72ch; /* Don't allow hard to read line-lengths */
		}

		& h2:not([class*="uc_h"]) { /* A h2 that doesn't have any heading related utility class on it */
			font-size: var(--font-size-heading);
		}
		& h3:not([class*="uc_h"]) { /* A h3 that doesn't have any heading related utility class on it */
			font-size: var(--font-size-heading-small);
		}
		& h4:not([class*="uc_h"]) { /* A h4 that doesn't have any heading related utility class on it */
			font-size: var(--font-size-promoted);
		}

		& a:not([class]) { /* Anchors that have a class likely have some unique styling */
			text-decoration: underline;
			text-underline-offset: 0.15em;
		}

		& ol {
			margin-left: 1.7em;

			& li::marker {
				font-family: monospace; font-size: 0.875em;
			}
		}

		& ul {
			margin-left: 1.2em;
		}

		& blockquote {
			padding: 1em; margin-bottom: 1em;

			& p:last-child {
				margin-bottom: 0;
			}
		}

		& iframe {
			display: block;
		}
	}

	.navSite ul {
		display: flex; flex-wrap: wrap; gap: var(--gap);
	}

	a[aria-current="page"] {
		pointer-events: none;
		text-decoration: underline;
	}

	aside {
		border-radius: 0.5rem; padding: var(--gap); border: 1px dashed currentColor;
	}

	article:has( > section + aside ) { /* Firefox doesn't have native support yet... */
		display: grid; grid-template-columns: 3fr 1fr; gap: calc(2 * var(--gap));
	}

	/* Adjust the font weight when we hit the full "20px" base size */
	@media screen and (min-width: 1280px) {
		html {
			font-weight: 300;
		}
		:where(h1,h2,h3,h4,h5,h6) {
			font-weight: bold;
		}
	}
}

@layer utilities {
	:where(.uc_callout) {
		padding: 0.25em .5em;
		background-color: hsl( var(--colour-callout) );
		color: hsl( var(--colour-callout-contrast) );
	}
}