@layer defaults {
	:root {
		/* Form related */
		--indent:                  var(--gap);
		--input-padding:           0.5em;
		--input-border-width:      2px;
		--input-border-radius:     0.25em;
		--input-border-colour:     hsl(var(--black) / 0.1);
		--caret-colour:            hsl(var(--ui-green));
	}
}

@layer design {
	/*
		# Form management

		NOTES:

		- It is valid to use <link type="stylesheet" href="..." /> inside <body>
		- Because of this, and because linked resources are cached and not re-fetched if already downloaded, it's likely a neat way to have minimal CSS loaded on any page.

		REFERENCE:
		https://html.spec.whatwg.org/multipage/links.html#body-ok
	*/

	label {
		display: block;
	}
	[for] {
		font-size: 0.875em; text-transform: uppercase;
	}

	legend {
		margin-inline-start: calc( 0px - var(--indent) );
		text-transform: uppercase; letter-spacing: -0.025em; font-size: var(--font-size-heading-small);
	}

	input[type="text"],
	input[type="email"],
	input[type="search"],
	input[type="password"],
	input[type="number"],
	input[type="date"],
	textarea,
	select {
		width        : 100%;
		padding      : var(--input-padding);
		border-style : solid;
		border-width : var(--input-border-width);
		border-color : var(--input-border-colour);
		border-radius: var(--input-border-radius);
		transition   : all var(--fast);
		caret-color  : var(--input-caret-colour);
		color        : initial;
	}

	select {
		-moz-appearance    : none; -webkit-appearance: none;
		padding-right      : calc( 1.25em + var(--input-padding) );
		background-image   : url(/design-assets/images/chevron-down.svg);
		background-repeat  : no-repeat;
		background-position: right .7em top 50%;
		background-size    : 1.25em auto;
	}
	select::-ms-expand {
		display: none;
	}

	:where(.form-context, .field) {
		& > * {
			margin-top: var(--gap);
		}
	}

	:where(.ui-error-message, .ui-instructions) {
		padding: 1rem 0.5rem 1em 3.5em; border-radius: 0.5rem 0.5rem; border: 0.15em solid red;
		background-image:
			url(/design-assets/images/exclamation-triangle.svg),
			linear-gradient(to right, red 0 2.6em, white 2.6em 100% );
		background-position:
			0.65em 0.85em,
			0 0;
		background-size:
			1.25em auto,
			100% 100%;
		background-repeat:
			no-repeat,
			no-repeat;

		& * + * {
			margin-block-start: 1rem;
		}
	}
	:where(.ui-instructions) {
		border-color: blue;
		background-image:
			url(/design-assets/images/information-circle.svg),
			linear-gradient(to right, blue 0 2.6em, white 2.6em 100% );
	}

	.fieldset {
		padding-inline-start: var(--indent);

		&:has( *[required] ) {
			& legend {
				display: flex; justify-content: space-between; align-items: baseline;

				&:after {
					content: "contains required fields";
					opacity: 0.5;
					font-size: 1rem;
				}
			}
		}

		& .fieldWrapper > * + * {
			margin-block-start: 0.5rem;
		}

		& > * {
			margin-top: var(--gap);
		}

		& .theOptions {
			margin-top: calc( 0.5 * var(--gap) );
			display: flex; flex-wrap: wrap; gap: calc( 2 * var(--gap) );
			padding      : var(--input-padding);
			border-style : solid;
			border-width : var(--input-border-width);
			border-color : var(--input-border-colour);
			border-radius: var(--input-border-radius);

			& .htmlField {
				margin-bottom: 0;
			}
		}
	}

	.formField {
		margin-bottom: var(--gap);

		& label { /* split the status indicator away from the label */
			display: flex; justify-content: space-between; align-items: baseline;

			&:after {
				content: "";
				font-size: 1rem;
			}
		}

		/* Dynamic indicators for required / valid states */
		&:has( *:not(:placeholder-shown):invalid ) {
			& label {
				&:after {
					content: "invalid";
					color: hsl( var(--ui-red) ); font-weight: bold;
				}
			}
		}

		&:has( *[required]:invalid ) { /* A required input that's invalid */
			& label {
				&:after {
					content: "required";
				}
			}
		}

		&:has( *:not(:placeholder-shown)[required]:invalid ) { /* A required input, placeholder not shown, but invalid */
			& label {
				&:after {
					content: "invalid";
				}
			}
		}

		&.radio,
		&.checkbox {
			& label {
				display: flex;

				& input {
					margin-right: 20px;
				}
			}
		}

		& .field-error-message {
			padding: 0.25em 0.5em 0.5em;
			border-radius: 0 0 var(--input-border-radius, 0.25rem) var(--input-border-radius, 0.25rem);
			background-color: red; color: white;
		}

		& .form-instructions {
			padding: 0.25em 0.5em 0.5em;
			border-radius: 0 0 var(--input-border-radius, 0.25rem) var(--input-border-radius, 0.25rem);
			background-color: var(--input-border-colour); color: white;
			font-size: 0.875em;
		}

		&.hasError {
			--input-border-colour: red;

			& .form-instructions {
				border-radius: 0; border-right-color: red; border-left-color: red;
			}
		}
	}

	.formActions {
		display: flex; align-items: center; justify-content: space-between;
		margin-top: var(--gap);

		& > * { margin-right: 1em; }
		& > *:last-child { margin-right: 0; }
	}

	.previouslyUploaded {
		& p {
			@include uppercase; margin-bottom: 0.5em;
		}

		& ul {
			--minimum-width: 220px;

			display: grid; grid-gap: var(--gap, 1rem);
			grid-template-columns: repeat(auto-fill, minmax( min( var(--minimum-width, 220px), 100% ), 1fr) );
		}

		& li {
			position: relative;
			display: flex;

			& a {
				position: absolute; top: 0; right: 0;
				padding: 0.5em; background-color: white;

				&:hover {
					cursor: pointer;
				}
			}

			& img {
				width: 100%; display: flex;
			}
		}
	}
}